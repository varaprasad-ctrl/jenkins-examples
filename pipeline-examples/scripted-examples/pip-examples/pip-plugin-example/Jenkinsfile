node {
    def server = Artifactory.server SERVER_ID
    def rtPip = Artifactory.newPipBuild()
    def buildInfo

    stage ('Clone') {
        git url: 'https://github.com/jfrog/project-examples.git'
    }

    stage ('Artifactory configuration') {
        rtPip.resolver repo: 'pypi-virtual', server: server
        buildInfo = Artifactory.newBuildInfo()
    }

    withPythonEnv('/usr/local/bin/python3') {
        stage ('Pip install') {
            rtPip.install buildInfo: buildInfo, args: "-r python-example/requirements.txt"
        }

        stage ('Package and create distribution archives') {
            sh '''
                cd python-example
                pip install wheel
                pip install setuptools
                python setup.py sdist bdist_wheel
            '''
        }
    }

    stage ('Upload packages') {
        def uploadSpec = """{
            "files": [
                {
                    "pattern": "python-example/dist/",
                    "target": "pypi-virtual/"
                }
            ]
        }"""
        server.upload buildInfo: buildInfo, spec: uploadSpec
    }

    stage ('Publish build info') {
        server.publishBuildInfo buildInfo
    }
}